<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd	
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd"
	default-lazy-init="true">

	<context:property-placeholder location="classpath*:/weixin.properties"
		ignore-resource-not-found="true" ignore-unresolvable="true" />
	<context:component-scan base-package="com.tupengxiong" />

	<!-- 阿里 druid 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="filters" value="${jdbc.filters}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.maxWait}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${jdbc.minIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />
		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
	</bean>

	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="dataSourceTransactionManager" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations" value="classpath:ibatis/*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg index="0">
			<list>
				<bean id="byteArrayHttpMessageConverter"
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
				<bean id="stringHttpMessageConverter"
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<constructor-arg value="UTF-8"></constructor-arg>
				</bean>
				<bean id="resourceHttpMessageConverter"
					class="org.springframework.http.converter.ResourceHttpMessageConverter"></bean>
				<bean id="sourceHttpMessageConverter"
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter"></bean>
				<bean id="allEncompassingFormHttpMessageConverter"
					class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"></bean>
				<bean id="jaxb2RootElementHttpMessageConverter"
					class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"></bean>
				<bean id="mappingJackson2HttpMessageConverter"
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
			</list>
		</constructor-arg>
	</bean>

	<bean id="redisPool" class="com.tupengxiong.weixin.redis.RedisPool">
		<constructor-arg name="ip" value="${redis.ip}"></constructor-arg>
		<constructor-arg name="port" value="${redis.port}"></constructor-arg>
	</bean>
	<!-- task start -->
	<bean id="producerWxText" class="com.tupengxiong.weixin.task.producer.ProducerWxText">
		<constructor-arg name="producerNum" value="1" />
		<constructor-arg name="consumerNum" ref="1" />
	</bean>
	<!-- task end -->
	<import resource="classpath*:/applicationContext-mapper.xml" />
	<task:annotation-driven />
</beans>
